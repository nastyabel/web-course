{"mappings":"AGAO,MAAM,EAAiB,UAC1B,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,yCACvB,EAAO,MAAM,EAAS,IAAI,GAChC,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,4CAAQ,EAAE,EAAS,MAAM,CAAA,CAAE,EAEhD,OAAO,EAAK,IAAI,AACpB,CAAE,MAAO,EAAO,CAEZ,OADA,QAAQ,KAAK,CAAC,6BAA8B,GACrC,IACX,CACJ,EAEa,EAAW,MAAO,IAC3B,IAAM,EAAW,MAAM,MAAM,6CAA8C,CACvE,OAAQ,OACR,QAAS,CACL,eAAgB,kBACpB,EACA,KAAM,KAAK,SAAS,CAAC,CACjB,QAAS,EACT,SAAU,MACd,EACJ,GAEM,EAAO,MAAM,EAAS,IAAI,GAEhC,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,GAGpB,OAAO,CACX,ED/BM,EAAc,AAAC,IACjB,IAAM,EAAY,SAAS,aAAa,CAAC,mBACzC,CAAA,EAAU,SAAS,CAAG,GACtB,IAAM,EAAY;A;AAEN,gBAAA,EAAE,EAAM,KAAK,CAAC;AACR,sBAAA,EAAE,EAAM,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,EAAE,EAAM,KAAK,CAAC;AACxC,sCAAA,EAAE,EAAM,IAAI,CAAC;AACT,0CAAA,EAAE,EAAM,QAAQ,CAAC;AACjB,0CAAA,EAAE,EAAM,QAAQ,CAAC;AACjB,0CAAA,EAAE,EAAM,QAAQ,CAAC;A;AAEN,qDAAA,EAAE,EAAM,MAAM,CAAC;AACpE;AACA;AACA,IAAI,CAAC,AACD,CAAA,EAAU,SAAS,CAAG,EAEtB,IAAM,EAAa,EAAU,aAAa,CAAC,gBAC3C,EAAW,gBAAgB,CAAC,QAAS,KAEjC,AAAA,EADW,EAAW,YAAY,CAAC,WAEvC,EACJ,EAEa,EAAsB,UAE/B,EADc,MAAM,AAAA,IAExB,ED7BA,SAAS,gBAAgB,CAAC,mBAAoB,KAC1C,AAAA,IAGA,AADsB,SAAS,aAAa,CAAC,kBAC/B,gBAAgB,CAAC,QAAS,EAC5C","sources":["<anon>","src/scripts/index.js","src/scripts/anime.js","src/scripts/api.js"],"sourcesContent":["const $38284ca8c0530ade$export$f516df89520d65dc = async ()=>{\n    try {\n        const response = await fetch('https://api.jikan.moe/v4/random/anime');\n        const data = await response.json();\n        if (!response.ok) throw new Error(`\\u{41E}\\u{448}\\u{438}\\u{431}\\u{43A}\\u{430}: ${response.status}`);\n        return data.data;\n    } catch (error) {\n        console.error(\"\\u041D\\u0435 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u043B\\u043E\\u0441\\u044C \\u043D\\u0430\\u0439\\u0442\\u0438 \\u0430\\u043D\\u0438\\u043C\\u0435:\", error);\n        return null;\n    }\n};\nconst $38284ca8c0530ade$export$c647953e50361dd7 = async (animeId)=>{\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            animeId: animeId,\n            reaction: 'like'\n        })\n    });\n    const data = await response.json();\n    if (!response.ok) throw new Error(data);\n    return data;\n};\n\n\nconst $7bf27de930101202$var$renderAnime = (anime)=>{\n    const container = document.querySelector('#anime-container');\n    container.innerHTML = '';\n    const animeHTML = `\n        <div class=\"anime\">\n            <h2>${anime.title}</h2>\n            <img src=\"${anime.images.jpg.large_image_url}\" alt=\"${anime.title}\" />\n            <p><strong>Type:</strong> ${anime.type}</p>\n            <p><strong>Episodes:</strong> ${anime.episodes}</p>\n            <p><strong>Duration:</strong> ${anime.duration}</p>\n            <p><strong>Synopsis:</strong> ${anime.synopsis}</p>\n            <div class=\"actions\">\n                <button class=\"like-button\" data-id=\"${anime.mal_id}\">\\u{1F44D} \\u{41B}\\u{430}\\u{439}\\u{43A}</button>\n            </div>\n        </div>\n    `;\n    container.innerHTML = animeHTML;\n    const likeButton = container.querySelector('.like-button');\n    likeButton.addEventListener('click', ()=>{\n        const id = likeButton.getAttribute('data-id');\n        (0, $38284ca8c0530ade$export$c647953e50361dd7)(id);\n    });\n};\nconst $7bf27de930101202$export$1d95088eba894667 = async ()=>{\n    const anime = await (0, $38284ca8c0530ade$export$f516df89520d65dc)();\n    $7bf27de930101202$var$renderAnime(anime);\n};\n\n\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    (0, $7bf27de930101202$export$1d95088eba894667)();\n    const refreshButton = document.querySelector('#refresh-anime');\n    refreshButton.addEventListener('click', (0, $7bf27de930101202$export$1d95088eba894667));\n});\n\n\n//# sourceMappingURL=index.358c2a0c.js.map\n","import { fetchAndRenderAnime } from './anime.js';\ndocument.addEventListener('DOMContentLoaded', () => {\n    fetchAndRenderAnime();\n    \n    const refreshButton = document.querySelector('#refresh-anime');\n    refreshButton.addEventListener('click', fetchAndRenderAnime);\n});\n","import { getRandomAnime, sendLike } from './api.js';\n\nconst renderAnime = (anime) => {\n    const container = document.querySelector('#anime-container');\n    container.innerHTML = '';\n    const animeHTML = `\n        <div class=\"anime\">\n            <h2>${anime.title}</h2>\n            <img src=\"${anime.images.jpg.large_image_url}\" alt=\"${anime.title}\" />\n            <p><strong>Type:</strong> ${anime.type}</p>\n            <p><strong>Episodes:</strong> ${anime.episodes}</p>\n            <p><strong>Duration:</strong> ${anime.duration}</p>\n            <p><strong>Synopsis:</strong> ${anime.synopsis}</p>\n            <div class=\"actions\">\n                <button class=\"like-button\" data-id=\"${anime.mal_id}\">üëç –õ–∞–π–∫</button>\n            </div>\n        </div>\n    `;\n    container.innerHTML = animeHTML;\n\n    const likeButton = container.querySelector('.like-button');\n    likeButton.addEventListener('click', () => {\n        const id = likeButton.getAttribute('data-id');\n        sendLike(id);\n    });\n};\n\nexport const fetchAndRenderAnime = async () => {\n    const anime = await getRandomAnime();\n    renderAnime(anime);\n};\n","export const getRandomAnime = async () => {\n    try {\n        const response = await fetch('https://api.jikan.moe/v4/random/anime');\n        const data = await response.json();\n        if (!response.ok) {\n            throw new Error(`–û—à–∏–±–∫–∞: ${response.status}`);\n        }\n        return data.data;\n    } catch (error) {\n        console.error('–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–Ω–∏–º–µ:', error);\n        return null;\n    }\n};\n\nexport const sendLike = async (animeId) => {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            animeId: animeId,\n            reaction: 'like'\n        })\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n    \n    return data;\n};"],"names":["$38284ca8c0530ade$export$f516df89520d65dc","response","fetch","data","json","ok","Error","status","error","console","$38284ca8c0530ade$export$c647953e50361dd7","animeId","method","headers","body","JSON","stringify","reaction","$7bf27de930101202$var$renderAnime","anime","container","document","querySelector","innerHTML","animeHTML","title","images","jpg","large_image_url","type","episodes","duration","synopsis","mal_id","likeButton","addEventListener","getAttribute","$7bf27de930101202$export$1d95088eba894667","refreshButton"],"version":3,"file":"index.358c2a0c.js.map"}